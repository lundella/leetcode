const solution = require('../88.MergeSortedArray');
const testExample = [
  {
    input: {
      nums1: [1,2,3,0,0,0],
      m: 3,
      nums2: [2,5,6],
      n: 3
    },
    output: [1,2,2,3,5,6],
  },
  {
    input: {
      nums1: [1],
      m: 1,
      nums2: [],
      n: 0
    },
    output: [1]
  },
  {
    input: {
      nums1: [0],
      m: 0,
      nums2: [1],
      n: 1
    },
    output: [1],
  },
  {
    input: {
      nums1: [-1,0,0,3,3,3,0,0,0],
      m: 6,
      nums2: [1,2,2],
      n: 3
    },
    output: [-1,0,0,1,2,2,3,3,3],
  },
  {
    input: {
      nums1: [-10,-10,-9,-9,-9,-8,-8,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-4,-4,-4,-3,-3,-2,-2,-1,-1,0,1,1,1,2,2,2,3,3,3,4,5,5,6,6,6,6,7,7,7,7,8,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
      m: 55,
      nums2: [-10,-10,-9,-9,-9,-9,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-5,-5,-5,-5,-5,-4,-4,-4,-4,-4,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,0,0,0,0,0,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,9,9,9,9],
      n: 99
    },
    output: [-10,-10,-10,-10,-9,-9,-9,-9,-9,-9,-9,-8,-8,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-5,-5,-5,-5,-5,-4,-4,-4,-4,-4,-4,-4,-4,-3,-3,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,-1,-1,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,9,9,9,9,9,9,9,9],
  }
];


describe.each(testExample)(
  'Merge Sorted Array',
  (testCase) => {
    const {nums1, m, nums2, n} = testCase.input;
    const expected = testCase.output;

    test(`Test [${nums1, m, nums2, n}] to be ${expected}`, () => {
      expect(solution(nums1, m, nums2, n)).toEqual(expected)
    })
  }
)